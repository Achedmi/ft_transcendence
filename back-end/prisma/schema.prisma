// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  ONLINE
  OFFLINE
  INGAME
  INQUEUE
  STARTINGGAME
  
}

enum ChatType {
  DM
  CHANNEL
}

enum Visibility {
  PUBLIC
  PRIVATE
  PROTECTED
}

model Message {
  id        Int      @default(autoincrement()) @id
  message   String
  userId Int?
  chatId Int?
  chat Chat? @relation(fields: [chatId], references: [id])
  user User? @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Chat {
  id        Int      @default(autoincrement()) @id
  type ChatType
  visibility Visibility
  name String? @unique
  ownerId Int?
  image String?
  password String?
  createdAt DateTime @default(now())
  owner User? @relation("owner", fields: [ownerId], references: [id])
  members User[]
  messages Message[]
  chatUser UserChat[]
}

model UserChat {
  id        Int      @default(autoincrement()) @id
  userId Int?
  chatId Int?
  isMutted Boolean @default(false)
  mutedById Int?
  isAdmin Boolean @default(false)
  user User? @relation(fields: [userId], references: [id])
  chat Chat? @relation(fields: [chatId], references: [id])
  mutedBy User? @relation("mutedBy", fields: [mutedById], references: [id])
  createdAt DateTime @default(now())
  @@unique([userId, chatId])
}

model Friendship {
  id        Int      @default(autoincrement()) @id
  user1Id Int?
  user2Id Int?
  
  isBlocked Boolean @default(false)
  BlockedById Int?
  
  BlockedBy User? @relation("BlockedBy", fields: [BlockedById], references: [id])
  user1 User? @relation("user1", fields: [user1Id], references: [id])
  user2 User? @relation("user2", fields: [user2Id], references: [id])
  
  createdAt DateTime @default(now())
}

model User {
  id    Int     @default(autoincrement()) @id
  username String  @unique
  displayName String
  avatar String
  level Float  @default(0)
  status  Status @default(ONLINE)
  isTFAenabled Boolean @default(false)
  TFAsecret String? 
  
  bio String? @default("Nothing to see here...")
  createdAt DateTime @default(now())
  player1 Game[] @relation("player1")
  player2 Game[] @relation("player2")
  winnerPlayer Game[] @relation("winnerPlayer")
  chats Chat[]
  owner Chat[]  @relation("owner")
  messages Message[]
  friendship1 Friendship[] @relation("user1")
  friendship2 Friendship[] @relation("user2")
  BlockedBy Friendship[] @relation("BlockedBy")
  chatUser UserChat[]
  mutedBy UserChat[] @relation("mutedBy")
}

model Game {
  createdAt DateTime @default(now())
  id        Int      @default(autoincrement()) @id
  player1    User?    @relation("player1", fields: [player1Id], references: [id])
  player2    User?    @relation("player2", fields: [player2Id], references: [id])
  player1Score Int    @default(0)
  player2Score Int  @default(0)
  winnerPlayer User? @relation("winnerPlayer", fields: [winnerPlayerId], references: [id])
  player1Id  Int?
  player2Id  Int?
  winnerPlayerId Int?
}

